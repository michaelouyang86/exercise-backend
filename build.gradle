plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.10.0'
}

group = 'com.michael'
version = '1.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	implementation 'org.bouncycastle:bcprov-jdk18on:1.79'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
  generatorName = 'spring'
  inputSpec = file("${projectDir}/src/main/resources/static/openapi/exercise.yaml").toString()
  outputDir = file("${buildDir}/generated/openapi").toString()
  apiPackage = 'com.michael.exercise.controllers'
  modelPackage = 'com.michael.exercise.dtos'
  configOptions = [
    useSpringBoot3: "true",
    interfaceOnly: "true"
  ]
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir "${buildDir}/generated/openapi/src/main/java"
        }
    }
}

compileJava.dependsOn tasks.named("openApiGenerate")